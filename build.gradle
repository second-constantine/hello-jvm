ext {
    currentVersion = "1.1-SNAPSHOT"
    springBootVersion = "2.1.0.RELEASE"
    hibernateVersion = "5.3.6.Final"
    mapstructVersion = "1.2.0.Final"
    swaggerVersion = "2.8.0"
    log4jVersion = "1.2.14"
    log4jApacheVersion = "2.1"
    jooqVersion = "3.10.4"
    jooqPluginVersion = "2.0.11"
    mysqlConnectorVersion = "6.0.6"
    feignVersion = "9.6.0"
    emailVersion = "1.6.1"
    gsonVersion = "2.8.2"
    httpClientVersion = "4.5.5"
    jacksonVersion = "2.9.4"
    commonsLangVersion = "2.6"
    mongoDriverVersion = "3.6.3"
    mongoSpringVersion = "2.0.6.RELEASE"
    reactorVersion = "3.1.6.RELEASE"
    groovyVersion = "2.5.2"
    junitVersion = "5.2.0"
    spockVersion = "1.1-groovy-2.4"
    kotlinSpockRunnerVersion = "0.3.1"
}

apply plugin: 'idea'
apply plugin: 'maven'

group 'by.next-way'

def javaProjects() {
    return subprojects.findAll()
}

buildscript {
    ext.kotlinVersion = "1.3.31"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

configure(javaProjects()) {
    apply plugin: 'kotlin' // Required for Kotlin integration
    apply plugin: 'java'
    apply plugin: "groovy"
    group 'by.next.way'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict -jvm-target 1.8"]
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-reflect"
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1"
    }
    
    test {
        useJUnitPlatform()
    }
}
